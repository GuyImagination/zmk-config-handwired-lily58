/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        Hmrw_L: Hmrw_L {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRW_L";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&lt 2 ESC         &kp NUMBER_1  &kp N2  &kp N3        &kp N4     &kp N5                                                  &kp N6         &kp N7     &kp N8         &kp N9   &kp N0              &lt 1 GRAVE
&kp TAB           &kp Q         &kp W   &kp E         &kp R      &kp T                                                   &kp Y          &kp U      &kp I          &kp O    &kp P               &kp MINUS
&kp LEFT_SHIFT    &kp A         &kp S   &kp D         &kp F      &kp G                                                   &kp H          &kp J      &kp K          &kp L    &kp SEMI            &kp SQT
&kp LEFT_CONTROL  &kp Z         &kp X   &kp C         &kp V      &kp B          &mt LEFT_GUI LBKT    &mt RIGHT_GUI RBKT  &kp N          &kp M      &kp COMMA      &kp DOT  &mt BACKSLASH FSLH  &kp RSHFT
                                        &kp LEFT_ALT  &kp ENTER  &kp BACKSPACE  &kp SPACE            &lt 2 SPACE         &kp BACKSPACE  &kp ENTER  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3      &bt BT_SEL 4                         &trans     &trans     &trans     &trans    &trans    &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5            &kp F6                               &kp F7     &kp F8     &kp F9     &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR        &kp PRCNT                            &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&kp SQT     &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans    &trans  &trans     &kp MINUS  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE
                                                 &trans             &trans            &trans             &trans    &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans    &trans    &trans     &trans  &trans                    &kp N7        &kp N8        &kp N9        &kp SLASH     &trans    &trans
&trans     &trans    &kp UP    &trans     &trans  &trans                    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK  &kp UP    &trans
&kp LSHFT  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans                    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT      &kp DOWN  &kp RIGHT
&trans     &trans    &trans    &trans     &trans  &trans  &trans    &trans  &kp EQUAL     &kp N0        &kp PERIOD    &kp PLUS      &kp RBKT  &kp LSHFT
                               &trans     &trans  &trans  &trans    &trans  &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Adjust {
            if-layers = <1>;
            then-layer = <3>;
        };
    };
};
